A programação estruturaa é um paradigma de programação que visa melhorar a clareza, a qualidade 
e o tempo de desenvilmento de um programa de computador, fazendo uso extensivo das contruções de fluxo
de controle estruturado de seleção (if, then, else ) e repetição (while e for), estruturas de bloco e sub - rotinas

Enquanto a programção estruturada é voltada a procedimento e funções definidas pelo usuário, a programação orientada a objetos
é voltada a conceitos como o de classes e objetos.

CLASSES

Classe (Class): A strutura e ou representação que direciona a criação dos objetos de mesmo tipo.
Identificador(identity) : Proposito existencial aos objetos que 
serão criados
Caracteristicas(states): Também conhecido como atributos ou propriedades, é toda informação que representa
o estado do objeto.
Comportamentos(behavior): Também conhecido como ações ou métodos, é toda parte comportamental que um objeto dispõe.
Instanciar(new): É o ato de criar um objeto a partir de estrutura definida em uma classe.

CONVENÇÕES CLASSE:

Classe de modelo(model): classes que representem estrutura de dominio da aplicação, exemplo: Cliente, Pedido, Nota Fiscal e etc.
Classe de serviço(service): classes que contém regras de negócio e validação de nosso sistema.
Classe de repositório(repository): classes que contém uma integração com o banco de dados.
Classe de controle(Controller): classes que possuem a finalidade de disponibilizar alguma comunicação externa á nossa aplicação, tipo http web ou webservices.
Classe view: classes que possuem alguma interação com a interface gráfica
Classe utilitária(util): classe que contém recursos comuns á toda nossa aplicação.


NOMENCLATURA

Exemplos de nomenclatura:
Comercial: com.powersoft
Governamental: gov.powersoft
Código aberto: org.powersoft

GETTER e SETTERS

O método Getter retona o valor do atributo especificado.
o método Setter define outro novo valor para o atributo especificado.
Os atributos precisam ter o modificador de acesso private Ex.: private String nome;
Como agora os atributos estarão soment a nível de classe, precisaremos ds métodos, getX e setX, Ex.: getNome() e setNome(String novoNome);
o método get é responsável por obter o valor atual do atributo, logo ele precisa ser public retornar um tipo correspondente ao valor, Ex.: public String getNome() {};
o método set é responsável por definir ou modificadr o valor de um atributo em um objeto, logo ele também precisa ser public, receber um parâmetro do mesmo tipo da 
variável mas não retorna nenhum valor void. Ex.: public void setNome(String newNome);


CONSTRUTORES

ENUMS
É um tipo especial de classe onde os objetos são previmanete criados imutáveis e disponíveis por toda aplicação.
Usamos Enum quando o nosso modelo de negócio contém objetos de mesmo contxto que já existem de pré-estabelecida com 
a certeza de não haver tanta alteração de valores.
EXEMPLOS.: Grau de escolaridade, estado civil, estados brasileiros.


UML

Linguaguem de Modelage Unificada ou UML é uma notação que possibilita a representação gráfica do projeto
Na UML temos três conceitos necessários para compreendermos incialmente:
diagramas, elementos e relacionamentos.

Diagrama estruturais.
Diagrama de classe: O diagrama de classes é utilizado para fazer a representação de estruturas de classes de negócio, interfaces e outros componestes do sistema.
Por esta caracteristica, este diagrama é considerao o mais importante para a UML, pois auxilia a maioria dos demias diagramas.
Diagrama de objetos: Este diagram representa os objetos existentes em um determinado instante ou fto na aplicação. Assim conseguimos ter uma perspectiva do estado
e nossos objetos mediante a interação dos usuários no sistema.

